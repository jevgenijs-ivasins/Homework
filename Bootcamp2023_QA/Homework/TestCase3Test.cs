// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
[TestFixture]
public class TestCase3Test
{
    private IWebDriver driver;
    public IDictionary<string, object> vars { get; private set; }
    private IJavaScriptExecutor js;
    [SetUp]
    public void SetUp()
    {
        driver = new ChromeDriver();
        js = (IJavaScriptExecutor)driver;
        vars = new Dictionary<string, object>();
    }
    [TearDown]
    protected void TearDown()
    {
        driver.Quit();
    }
    public string waitForWindow(int timeout)
    {
        try
        {
            Thread.Sleep(timeout);
        }
        catch (Exception e)
        {
            Console.WriteLine("{0} Exception caught.", e);
        }
        var whNow = ((IReadOnlyCollection<object>)driver.WindowHandles).ToList();
        var whThen = ((IReadOnlyCollection<object>)vars["WindowHandles"]).ToList();
        if (whNow.Count > whThen.Count)
        {
            return whNow.Except(whThen).First().ToString();
        }
        else
        {
            return whNow.First().ToString();
        }
    }
 //   Test case 3
	//1. User enters visma.lv
	//2. User scrolls down to the social media links
	//3. Youtube link should link to YouTube Visma channel
    [Test]
    public void testCase3()
    {
        driver.Navigate().GoToUrl("https://www.visma.lv/");
        driver.FindElement(By.CssSelector("#onetrust-accept-btn-handler")).Click();
        vars["WindowHandles"] = driver.WindowHandles;
        driver.FindElement(By.XPath("/html/body/div[2]/div/footer/div[4]/nav/ul/li[4]/a")).Click();
        vars["win6971"] = waitForWindow(2000);
        driver.SwitchTo().Window(vars["win6971"].ToString());
        Assert.That(driver.FindElement(By.Id("text")).Text, Is.EqualTo("Visma Latvia"));
    }
}
